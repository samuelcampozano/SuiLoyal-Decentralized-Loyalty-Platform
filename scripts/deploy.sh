#!/bin/bash

# SuiLoyal Deployment Script
# This script deploys the Move package to Sui devnet and saves the addresses

set -e

echo "🚀 Starting SuiLoyal deployment..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check if sui CLI is installed
if ! command -v sui &> /dev/null; then
    echo -e "${RED}❌ Sui CLI is not installed. Please install it first.${NC}"
    echo "Visit: https://docs.sui.io/build/install"
    exit 1
fi

# Check current network
CURRENT_ENV=$(sui client active-env)
echo -e "${YELLOW}📍 Current Sui environment: $CURRENT_ENV${NC}"

# Switch to devnet if not already
if [ "$CURRENT_ENV" != "devnet" ]; then
    echo "Switching to devnet..."
    sui client switch --env devnet
fi

# Get active address
ACTIVE_ADDRESS=$(sui client active-address)
echo -e "${GREEN}💳 Active address: $ACTIVE_ADDRESS${NC}"

# Check balance
BALANCE=$(sui client gas --json | jq -r '.[0].gasBalance')
if [ "$BALANCE" -lt "100000000" ]; then
    echo -e "${RED}❌ Insufficient balance. You need at least 0.1 SUI.${NC}"
    echo "Get test SUI from: https://discord.com/invite/sui (use #devnet-faucet channel)"
    exit 1
fi
echo -e "${GREEN}💰 Balance: $((BALANCE / 1000000000)) SUI${NC}"

# Navigate to Move package
cd "$(dirname "$0")/../sui-packages/Loyalty"

# Build the package
echo -e "${YELLOW}🔨 Building Move package...${NC}"
sui move build

# Run tests
echo -e "${YELLOW}🧪 Running tests...${NC}"
sui move test

# Deploy the package
echo -e "${YELLOW}📦 Publishing package to devnet...${NC}"
PUBLISH_OUTPUT=$(sui client publish --gas-budget 100000000 --json)

# Extract package ID and important objects
PACKAGE_ID=$(echo $PUBLISH_OUTPUT | jq -r '.effects.created[] | select(.owner == "Immutable") | .reference.objectId')
PLATFORM_ID=$(echo $PUBLISH_OUTPUT | jq -r '.effects.created[] | select(.owner == "Shared") | .reference.objectId')

# Check if deployment was successful
if [ -z "$PACKAGE_ID" ]; then
    echo -e "${RED}❌ Deployment failed. Please check the output above.${NC}"
    exit 1
fi

echo -e "${GREEN}✅ Deployment successful!${NC}"
echo ""
echo "======================================"
echo -e "${GREEN}📋 Deployment Summary${NC}"
echo "======================================"
echo -e "Package ID: ${YELLOW}$PACKAGE_ID${NC}"
echo -e "Platform ID: ${YELLOW}$PLATFORM_ID${NC}"
echo -e "Network: ${YELLOW}devnet${NC}"
echo -e "Deployer: ${YELLOW}$ACTIVE_ADDRESS${NC}"
echo "======================================"

# Save deployment info to file
DEPLOYMENT_FILE="../../deployment.json"
cat > $DEPLOYMENT_FILE << EOF
{
  "network": "devnet",
  "packageId": "$PACKAGE_ID",
  "platformId": "$PLATFORM_ID",
  "deployer": "$ACTIVE_ADDRESS",
  "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
}
EOF

echo ""
echo -e "${GREEN}💾 Deployment info saved to: deployment.json${NC}"

# Update frontend config
FRONTEND_CONFIG="../../frontend/src/config.ts"
cat > $FRONTEND_CONFIG << EOF
// Auto-generated by deploy.sh
export const SUI_CONFIG = {
  PACKAGE_ID: '$PACKAGE_ID',
  PLATFORM_ID: '$PLATFORM_ID',
  NETWORK: 'devnet' as const,
};
EOF

echo -e "${GREEN}📝 Frontend config updated${NC}"

echo ""
echo -e "${YELLOW}📌 Next steps:${NC}"
echo "1. cd frontend && pnpm install && pnpm dev"
echo "2. Visit http://localhost:5173"
echo "3. Connect your wallet and start testing!"
echo ""
echo -e "${GREEN}🎉 Deployment complete!${NC}"

# View on explorer
echo ""
echo -e "${YELLOW}🔍 View on Sui Explorer:${NC}"
echo "https://suiexplorer.com/object/$PACKAGE_ID?network=devnet"
echo "https://suiexplorer.com/object/$PLATFORM_ID?network=devnet"